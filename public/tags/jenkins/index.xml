<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jenkins on 俺的博客</title>
    <link>http://localhost:1313/tags/jenkins/</link>
    <description>Recent content in Jenkins on 俺的博客</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 01 Jun 2019 10:07:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jenkins处理GitLab Hook</title>
      <link>http://localhost:1313/posts/jenkins%E5%A4%84%E7%90%86gitlab-hook/</link>
      <pubDate>Sat, 01 Jun 2019 10:07:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins%E5%A4%84%E7%90%86gitlab-hook/</guid>
      <description>&lt;p&gt;&lt;code&gt;jenkins&lt;/code&gt;安装&lt;code&gt;Generic Webhook Trigger Plugin&lt;/code&gt;插件&lt;/p&gt;
&lt;p&gt;{% asset_img Generic_Webhook_Trgger.png Generic\ Webhook\ Trgger具体配置 %}&lt;/p&gt;
&lt;p&gt;创建任务，在&lt;code&gt;构建触发器中&lt;/code&gt;勾选&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;, 在展开的页面中会有一个&lt;code&gt;URL&lt;/code&gt;, 这个&lt;code&gt;URL&lt;/code&gt;是配置&lt;code&gt;Webhook&lt;/code&gt;使用的，一般形式是&lt;code&gt;http://JENKINS_URL/generic-webhook-trigger/invoke&lt;/code&gt;, &lt;code&gt;JENKINS_URL&lt;/code&gt;是初始配置&lt;code&gt;jenkins&lt;/code&gt;时会有的，一般是&lt;code&gt;http://IP:8080&lt;/code&gt;的形式。&lt;/p&gt;
&lt;p&gt;如果之前有配置过&lt;code&gt;GitLab webhook&lt;/code&gt;, 请去除这个，不然&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;不会生效。&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;Git&lt;/code&gt;仓库的验证使用的是用户名和密码，那么就不需要配置&lt;code&gt;Token&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;复制这个&lt;code&gt;URL&lt;/code&gt;，将&lt;code&gt;JENKINS_URL&lt;/code&gt;替换为自己的真实数据，在&lt;code&gt;GitLab&lt;/code&gt;的对应的项目的&lt;code&gt;设置--&amp;gt;集成&lt;/code&gt;中输入，没有安全令牌，勾选自己需要的触发器事件，SSL证书验证可以开启，也可以不开启，推荐开启。&lt;/p&gt;
&lt;p&gt;任务设置界面还有&lt;code&gt;Post content parameters&lt;/code&gt;, &lt;code&gt;Header parameters&lt;/code&gt;, &lt;code&gt;Request parameters&lt;/code&gt;, 分别是请求的&lt;code&gt;post数据&lt;/code&gt;，&lt;code&gt;header头&lt;/code&gt;，&lt;code&gt;请求头&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一般我们只需要&lt;code&gt;post&lt;/code&gt;的数据里的内容就够了。&lt;/p&gt;
&lt;p&gt;图片的3，4分别是&lt;code&gt;变量名（3）&lt;/code&gt;，&lt;code&gt;值（4）&lt;/code&gt;。值是直接从&lt;code&gt;post&lt;/code&gt;的&lt;code&gt;json格式&lt;/code&gt;的数据中取出来的，注意，值的获取方式是&lt;code&gt;JSONPath&lt;/code&gt;，并且里面有&lt;code&gt;点&lt;/code&gt;，如果&lt;code&gt;json&lt;/code&gt;数据有多层，那么就多点几次，比如&lt;code&gt;$.project.name&lt;/code&gt;等，可以配置多个变量组。&lt;/p&gt;
&lt;p&gt;我们还可以&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;配置&lt;code&gt;Optional filter&lt;/code&gt;，设置一个触发事件，比如只有当你推送的分支是&lt;code&gt;develop&lt;/code&gt;的时候，才去构建。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Optional filter&lt;/code&gt;的&lt;code&gt;Expression&lt;/code&gt;框中输入&lt;code&gt;^(refs/heads/develop)$&lt;/code&gt;, 在下面的&lt;code&gt;Text&lt;/code&gt;框中输入&lt;code&gt;步骤3的变量名&lt;/code&gt;，这里写&lt;code&gt;$ref&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;shell&lt;/code&gt;中使用变量名的方式也是直接使用，例如&lt;code&gt;echo $ref&lt;/code&gt;， 注意没有&lt;code&gt;点&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配置完成后，保存，可以点击刚刚配置的&lt;code&gt;GitLab&lt;/code&gt;的&lt;code&gt;webhook&lt;/code&gt;页面的&lt;code&gt;Test&lt;/code&gt;对应的事件测试。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GitLab&lt;/code&gt;的&lt;code&gt;push&lt;/code&gt;的&lt;code&gt;hook&lt;/code&gt;数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Jenkins与RocketChat集成</title>
      <link>http://localhost:1313/posts/jenkins%E4%B8%8Erocketchat%E9%9B%86%E6%88%90/</link>
      <pubDate>Sat, 01 Jun 2019 10:06:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins%E4%B8%8Erocketchat%E9%9B%86%E6%88%90/</guid>
      <description>&lt;h2 id=&#34;jenkins与rocketchat集成&#34;&gt;Jenkins与RocketChat集成&lt;/h2&gt;
&lt;h3 id=&#34;在jenkins中安装插件rocketchat-notifier&#34;&gt;在Jenkins中安装插件RocketChat Notifier&lt;/h3&gt;
&lt;h3 id=&#34;配置信息&#34;&gt;配置信息&lt;/h3&gt;
&lt;p&gt;点击&lt;code&gt;Jenkins&lt;/code&gt;左侧的&lt;code&gt;系统管理--&amp;gt;系统设置&lt;/code&gt;, 找到&lt;code&gt;Global RocketChat Notifier Settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;Rocket Server URL&lt;/code&gt;, 是&lt;code&gt;URL:PORT&lt;/code&gt;的类型, 例: &lt;code&gt;http://chat.xxxx.com:80&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;Login Username&lt;/code&gt;和&lt;code&gt;Login password&lt;/code&gt;, 是&lt;code&gt;RocketChat&lt;/code&gt;的账号密码.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt;, 发送的频道.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Build Server URL&lt;/code&gt;, 构建的服务器和端口, &lt;code&gt;http://192.168.0.1:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;Test Connection&lt;/code&gt;, &lt;code&gt;Success&lt;/code&gt;表示配置成功.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins&#43;Python&#43;GitLab持续集成</title>
      <link>http://localhost:1313/posts/jenkins&#43;python&#43;gitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
      <pubDate>Sat, 01 Jun 2019 10:05:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins&#43;python&#43;gitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid>
      <description>&lt;h2 id=&#34;创建任务&#34;&gt;创建任务&lt;/h2&gt;
&lt;p&gt;登录&lt;code&gt;Jenkins&lt;/code&gt;，点击左侧列表的&lt;code&gt;新建&lt;/code&gt;选项。输入任务名称，选择&lt;code&gt;构建一个自由风格的软件项目&lt;/code&gt;，点击&lt;code&gt;确定&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;任务配置&lt;/code&gt;界面，可以设置&lt;code&gt;General标签&lt;/code&gt;中的&lt;code&gt;丢弃旧的构建&lt;/code&gt;选项，设置&lt;code&gt;保持构建的天数&lt;/code&gt;和&lt;code&gt;保持构建的最大个数&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;源码管理&lt;/code&gt;标签，选择&lt;code&gt;git&lt;/code&gt;，在&lt;code&gt;Repository URL&lt;/code&gt;中输入Git仓库的链接。&lt;/p&gt;
&lt;p&gt;如果是HTTP链接，选择&lt;code&gt;Credentials&lt;/code&gt;一行的&lt;code&gt;Add &amp;gt; Jenkins&lt;/code&gt;,在&lt;code&gt;Kind&lt;/code&gt;一行下拉选择&lt;code&gt;Username with password&lt;/code&gt;,在下方&lt;code&gt;Username&lt;/code&gt;和&lt;code&gt;Password&lt;/code&gt;框中输入用户名和密码。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;使用docker jenkins容器里面的ssh-key。&lt;/del&gt;
直接使用服务器的&lt;code&gt;ssh key&lt;/code&gt;就可以了。如果指定&lt;code&gt;Path to key&lt;/code&gt;需要使用&lt;code&gt;docker&lt;/code&gt;中的&lt;code&gt;ssh key&lt;/code&gt;。如果使用&lt;code&gt;Source files&lt;/code&gt;那么需要使用&lt;code&gt;docker&lt;/code&gt;容器中的&lt;code&gt;key&lt;/code&gt;, 因为&lt;code&gt;Source files&lt;/code&gt;的相对路径不是固化到本地的路径, 而是&lt;code&gt;docker&lt;/code&gt;中的路径.&lt;/p&gt;
&lt;p&gt;如果是&lt;code&gt;SSH&lt;/code&gt;链接，选择&lt;code&gt;SSH Username with private key&lt;/code&gt;,在&lt;code&gt;Username&lt;/code&gt;框中输入用户名，&lt;code&gt;Private Key	&lt;/code&gt;选择为&lt;code&gt;Enter directly&lt;/code&gt;,在显示的&lt;code&gt;key&lt;/code&gt;框中输入私钥。（生成秘钥&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;email.com&amp;quot;&lt;/code&gt;,生成的文件在&lt;code&gt;home&lt;/code&gt;目录下的&lt;code&gt;.ssh&lt;/code&gt;目录下,使用命令&lt;code&gt;cat id_rsa&lt;/code&gt;查看私钥，复制到&lt;code&gt;key&lt;/code&gt;框中）。点击最下方的&lt;code&gt;Add&lt;/code&gt;按钮，保存设置。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Credentials&lt;/code&gt;的下拉选项中选择刚刚创建&lt;code&gt;Username&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用定时任务&#34;&gt;使用定时任务&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;构建触发器&lt;/code&gt;标签里选择&lt;code&gt;Poll SCM&lt;/code&gt;,输入&lt;code&gt;H/2 * * * *&lt;/code&gt;, 最后点击&lt;code&gt;保存&lt;/code&gt;。
这是一个定时任务，每隔2分钟查询一次代码，如果有更新，就执行任务。&lt;/p&gt;
&lt;h2 id=&#34;使用webhook&#34;&gt;使用webhook&lt;/h2&gt;
&lt;p&gt;使用webhook比定时任务更好，webhook只有在push或指定操作时，jenkins会拉取代码，不用定时访问，耗费资源。&lt;/p&gt;
&lt;p&gt;需要安装的插件&lt;code&gt;Gitlab Hook、GitLab、Gitlab Authentication、Build Authorization Token Root&lt;/code&gt;
配置&lt;code&gt;job&lt;/code&gt;，在&lt;code&gt;构建触发器&lt;/code&gt;中勾选&lt;code&gt;Build when a change is pushed to GitLab. GitLab CI Service URL: http://服务器IP:8080/project/demo&lt;/code&gt; ，&lt;code&gt;URL&lt;/code&gt;后面是回调地址，再点击&lt;code&gt;高级&lt;/code&gt;，再&lt;code&gt;Secret token&lt;/code&gt;行，点击&lt;code&gt;Generate&lt;/code&gt;生成&lt;code&gt;token&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins&#43;Git子模块自动拉取代码</title>
      <link>http://localhost:1313/posts/jenkins&#43;git%E5%AD%90%E6%A8%A1%E5%9D%97%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 01 Jun 2019 10:04:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins&#43;git%E5%AD%90%E6%A8%A1%E5%9D%97%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;h2 id=&#34;jenkinsgit子模块自动拉取代码&#34;&gt;jenkins+Git子模块自动拉取代码&lt;/h2&gt;
&lt;p&gt;添加Git子模块
先克隆想要添加子模块的仓库&lt;code&gt;git clone ssh://git@ip:port/user/project.git&lt;/code&gt;，这个是主目录。&lt;/p&gt;
&lt;p&gt;进入仓库，添加子模块&lt;code&gt;git submodule add ssh://git@ip:port/user/project.git&lt;/code&gt;，和主仓库不同。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;查看，会有&lt;code&gt;.gitmodules&lt;/code&gt;和子模块的项目名。&lt;/p&gt;
&lt;p&gt;将生成的文件和目录push到主仓库中。&lt;/p&gt;
&lt;h2 id=&#34;克隆有子模块的仓库&#34;&gt;克隆有子模块的仓库&lt;/h2&gt;
&lt;p&gt;添加过子模块的仓库，如果想重新克隆，和普通克隆一样，不过克隆后需要在仓库目录下执行
&lt;code&gt;git submodule init&lt;/code&gt;和&lt;code&gt;git submodule update&lt;/code&gt;，如果不执行，子模块中会没有文件。&lt;/p&gt;
&lt;h2 id=&#34;更改子模块的分支&#34;&gt;更改子模块的分支&lt;/h2&gt;
&lt;p&gt;切换到子模块目录，默认子模块是master分支，&lt;code&gt;git submodule foreach git checkout dev&lt;/code&gt;，
然后使用&lt;code&gt;git submodule foreach git pull&lt;/code&gt;切换分支。&lt;/p&gt;
&lt;p&gt;需要在&lt;code&gt;jenkins&lt;/code&gt;任务的&lt;code&gt;构建步骤&lt;/code&gt;中添加&lt;code&gt;git submodule init&lt;/code&gt;和&lt;code&gt;git submodule update&lt;/code&gt;，以及上述操作（写在这两个命令后面），
&lt;code&gt;jenkins&lt;/code&gt;才能拉取到代码。&lt;/p&gt;
&lt;h2 id=&#34;submodule可以进行tag和merge&#34;&gt;submodule可以进行tag和merge&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git submodule foreach&lt;/code&gt;可以分别对子模块进行操作, 所以对所有子模块进行&lt;code&gt;tag&lt;/code&gt;和&lt;code&gt;merge&lt;/code&gt;操作, 就相当于对总项目进行相应的操作.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins Email Extension插件模板</title>
      <link>http://localhost:1313/posts/jenkins-email-extension%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Sat, 01 Jun 2019 10:03:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins-email-extension%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%9D%BF/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
