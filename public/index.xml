<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>俺的博客</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 俺的博客</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Sep 2024 10:55:43 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 在 Mac 或 Linux 上构建动态库</title>
      <link>http://localhost:1313/posts/go-%E5%9C%A8-mac-%E6%88%96-linux-%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%8A%A8%E6%80%81%E5%BA%93/</link>
      <pubDate>Wed, 11 Sep 2024 10:55:43 +0800</pubDate>
      <guid>http://localhost:1313/posts/go-%E5%9C%A8-mac-%E6%88%96-linux-%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%8A%A8%E6%80%81%E5%BA%93/</guid>
      <description>&lt;p&gt;Go 可以导出 C ABI，然后在其它兼容 C ABI 的语言中调用。&lt;/p&gt;
&lt;p&gt;下面详细讲解一下用法：&lt;/p&gt;
&lt;h3 id=&#34;go-构建动态库&#34;&gt;Go 构建动态库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;定义一个 go 文件，包含以下代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//export Add
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Add&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//export Multiply
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Multiply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Rust Main 函数是如何被执行的</title>
      <link>http://localhost:1313/posts/rust-main-%E5%87%BD%E6%95%B0%E6%98%AF%E5%A6%82%E4%BD%95%E8%A2%AB%E6%89%A7%E8%A1%8C%E7%9A%84/</link>
      <pubDate>Sun, 01 Sep 2024 10:20:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/rust-main-%E5%87%BD%E6%95%B0%E6%98%AF%E5%A6%82%E4%BD%95%E8%A2%AB%E6%89%A7%E8%A1%8C%E7%9A%84/</guid>
      <description>&lt;h1 id=&#34;rust-main-函数到底是如何被执行的呢&#34;&gt;Rust main 函数到底是如何被执行的呢？&lt;/h1&gt;
&lt;p&gt;让我们看一个关于 main 函数的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::error::Error;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), Box&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;dyn&lt;/span&gt; Error&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从这个示例我们可以看到，rust 的 main 函数竟然还可以返回 Result 枚举，这是为什么？rust 到底是如何执行用户定义的 main 函数的呢？&lt;/p&gt;
&lt;p&gt;接下来让我们对 rust 的源码进行剖析，看一看 rust 到底是如何运行 main 函数的。&lt;/p&gt;
&lt;h3 id=&#34;rust-运行时&#34;&gt;Rust 运行时&lt;/h3&gt;
&lt;p&gt;首先，在几乎所有的语言中（目前我不知道哪个语言会不进行处理），在执行用户的 main 函数之前都需要进行一些初始化工作，比如分配堆栈、创建并绑定主线程、初始化通用寄存器、初始化 GC等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用AWS S3 SDK访问阿里云oss</title>
      <link>http://localhost:1313/posts/%E4%BD%BF%E7%94%A8aws-s3-sdk%E8%AE%BF%E9%97%AE%E9%98%BF%E9%87%8C%E4%BA%91oss/</link>
      <pubDate>Sun, 01 Sep 2024 10:14:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E4%BD%BF%E7%94%A8aws-s3-sdk%E8%AE%BF%E9%97%AE%E9%98%BF%E9%87%8C%E4%BA%91oss/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;目前业务上使用的是 &lt;code&gt;aws&lt;/code&gt; 的 &lt;code&gt;s3&lt;/code&gt; 服务，但是想兼容阿里云的 &lt;code&gt;oss&lt;/code&gt;。根据&lt;code&gt;oss&lt;/code&gt;的文档描述，&lt;code&gt;oss&lt;/code&gt;支持使用 &lt;code&gt;aws&lt;/code&gt; 的 &lt;code&gt;sdk&lt;/code&gt; 进行访问，所以记录一下处理流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;访问aws-s3&#34;&gt;访问AWS S3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go-v2/aws&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go-v2/config&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go-v2/credentials&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go-v2/service/s3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewS3Client&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;accessKeyID&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACCESS_KEY_ID&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;accessKeySecret&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACCESS_KEY_SECRET&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;cfg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LoadDefaultConfig&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TODO&lt;/span&gt;(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithCredentialsProvider&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;credentials&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewStaticCredentialsProvider&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;accessKeyID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;accessKeySecret&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithEndpointResolverWithOptions&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;EndpointResolverWithOptionsFunc&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt;{}) (&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Endpoint&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Endpoint&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;PartitionID&lt;/span&gt;:   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aws-cn&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt;:           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://s3.cn-northwest-1.amazonaws.com.cn&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;SigningRegion&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cn-northwest-1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				}, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			}),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewFromConfig&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cfg&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;o&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Options&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;// 此选项可用于调试
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;// o.ClientLogMode = aws.LogSigning | aws.LogRequest | aws.LogResponseWithBody
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;o&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;UsePathStyle&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;bucket&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S3_BUCKET&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;uploadKey&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S3_KEY&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewS3Client&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PutObject&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Background&lt;/span&gt;(), &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PutObjectInput&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Bucket&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;bucket&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Key&lt;/span&gt;:    &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;uploadKey&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>通过docker配置MySQL主从服务</title>
      <link>http://localhost:1313/posts/%E9%80%9A%E8%BF%87docker%E9%85%8D%E7%BD%AEmysql%E4%B8%BB%E4%BB%8E%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sun, 01 Sep 2024 10:13:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E9%80%9A%E8%BF%87docker%E9%85%8D%E7%BD%AEmysql%E4%B8%BB%E4%BB%8E%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;h2 id=&#34;目录结构&#34;&gt;目录结构&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;│&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;my&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cnf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;├──&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slave&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;│&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;my&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cnf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;└──&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;docker&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;compose&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;yml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;master&lt;/code&gt;：主配置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slave&lt;/code&gt;：从配置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker-compose&lt;/code&gt;：通过 docker-compose 进行容器配置和启动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;master/my.cnf&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;advice&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;how&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;change&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;settings&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;please&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//dev.mysql.com/doc/refman/8.3/en/server-configuration-defaults.html
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;skip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;datadir&lt;/span&gt;=&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;=&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;secure&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;priv&lt;/span&gt;=&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;mysql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;=&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;pid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;自定义部分&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bin&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;master&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;binlog&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;按行重放&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;重放&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sql&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;语句&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mixed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;默认基于&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;一旦发现基于&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sql&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;无法精准重放时&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;会使用&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;MySQL&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;默认是基于&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;的复制&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;binlog&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;开启&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;binlog&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;的数据库名&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;如果有多个数据库&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;那么可以重复设置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;=&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;不能和任何&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;主或从&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;重复&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;自定义部分&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;=&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysqld&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!&lt;span style=&#34;color:#a6e22e&#34;&gt;includedir&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;etc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;conf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Go设计模式——单例模式</title>
      <link>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 01 Sep 2024 10:12:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;单例模式同时解决了两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;保证一个类只有一个实例&lt;/strong&gt;，例如控制某些共享资源（如数据库或文件）的访问权限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为该实例提供一个全局访问节点&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;中单例模式有两种实现，一种是&lt;code&gt;饿汉式&lt;/code&gt;，一种是&lt;code&gt;懒汉式&lt;/code&gt;。&lt;code&gt;饿汉式&lt;/code&gt;简单，可以将问题及早暴露出来，&lt;code&gt;懒汉式&lt;/code&gt;虽然支持延迟加载，但是也将可能的问题延迟到了第一次调用的时候，同时为了实现并发安全，也不得不加锁。&lt;/p&gt;
&lt;h2 id=&#34;饿汉式&#34;&gt;饿汉式&lt;/h2&gt;
&lt;h3 id=&#34;代码&#34;&gt;代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Package singleton
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;singleton&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// singleton 饿汉式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;singleton&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;File&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;File&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;singleton&lt;/span&gt; = &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;File&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GetInstance&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;File&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;singleton&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Go设计模式——开闭原则</title>
      <link>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99/</link>
      <pubDate>Sun, 01 Sep 2024 10:11:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;简单的说就是：&lt;code&gt;对扩展开放，对修改关闭&lt;/code&gt;。对扩展开放是为了应对需求的变化，对修改关闭就是为了保证已有代码的稳定性，最终是为了让系统更具有弹性，能更好的处理需求。&lt;/p&gt;
&lt;p&gt;开闭原则也包含了&lt;code&gt;单一职责原则&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们以消息队列来进行举例。&lt;/p&gt;
&lt;h2 id=&#34;坏的&#34;&gt;坏的&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Package main 开闭原则 Open-Closed Principle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 开闭原则包含了：单一职责原则
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KafkaQueue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;k&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KafkaQueue&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;SendMSG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Kafka send msg success&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RabbitQueue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;RabbitQueue&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;SendMSG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rabbitmq send msg success&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Demo&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Demo&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;SendByKafka&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;queue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KafkaQueue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;queue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SendMSG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Demo&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;SendByRabbit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;queue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RabbitQueue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;queue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SendMSG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Go设计模式——单一职责原则</title>
      <link>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99/</link>
      <pubDate>Sun, 01 Sep 2024 10:10:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/go%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;类的职责应该是单一的，对外只提供一种功能，而引起类变化的原因应该只有一个。简单的说就是每一个类只负责自己的事情，只有单一的功能。&lt;/p&gt;
&lt;p&gt;我们现在以银行工作人员举例：&lt;/p&gt;
&lt;h2 id=&#34;坏的&#34;&gt;坏的&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Package main 单一职责原则 Single-Responsibility Principle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Banker&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Save 存钱
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Banker&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Save&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;money&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;uint64&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;成功存入: %d\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;money&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Transfer 转账
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Banker&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Transfer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;money&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;uint64&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;成功向: %s转入: %d\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;money&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>如何在Go中使用POSIX命名信号量</title>
      <link>http://localhost:1313/posts/%E5%A6%82%E4%BD%95%E5%9C%A8go%E4%B8%AD%E4%BD%BF%E7%94%A8posix%E5%91%BD%E5%90%8D%E4%BF%A1%E5%8F%B7%E9%87%8F/</link>
      <pubDate>Sun, 01 Sep 2024 10:09:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E5%A6%82%E4%BD%95%E5%9C%A8go%E4%B8%AD%E4%BD%BF%E7%94%A8posix%E5%91%BD%E5%90%8D%E4%BF%A1%E5%8F%B7%E9%87%8F/</guid>
      <description>&lt;p&gt;&lt;code&gt;go&lt;/code&gt; 本身提供的 &lt;code&gt;semaphore&lt;/code&gt; 只能在同一个进程多个协程或线程间使用，无法在不同的 &lt;code&gt;go&lt;/code&gt; 进程之间使用，所以本文介绍，如何使用 &lt;code&gt;go&lt;/code&gt; 中的 &lt;code&gt;syscall&lt;/code&gt; 来使用 &lt;code&gt;POSIX&lt;/code&gt; 系统提供的&lt;code&gt;命名信号量&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;go-中的系统调用&#34;&gt;Go 中的系统调用&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;go&lt;/code&gt; 中，系统调用是通过 &lt;code&gt;syscall&lt;/code&gt; 包提供的 &lt;code&gt;Syscall&lt;/code&gt; 函数来进行系统调用的，不同的系统调用有不同的 &lt;code&gt;trap&lt;/code&gt;，以及&lt;code&gt;不同长度的参数&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;trap&#34;&gt;trap&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;go&lt;/code&gt; 在 &lt;code&gt;syscall&lt;/code&gt; 包中定义了大量的系统调用码，具体定义在文件&lt;code&gt;1.20.6/go/src/syscall/zsysnum_darwin_arm64.go&lt;/code&gt; 。不同操作系统上，定义所使用的文件是不同的，这些定义都是通过不同系统的c 语言头文件自动生成的。比如 &lt;code&gt;linux amd64&lt;/code&gt; 操作系统的定义在&lt;code&gt;1.20.6/go/src/syscall/zerrors_linux_amd64.go&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;不同长度的参数&#34;&gt;不同长度的参数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;syscall&lt;/code&gt; 包有 &lt;code&gt;Syscall、Syscall6&lt;/code&gt; 两个函数，对应于不同的操作系统调用参数长度的情况。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Syscall&lt;/code&gt; 总共接收 &lt;code&gt;4&lt;/code&gt; 个参数，第一个是 &lt;code&gt;trap&lt;/code&gt; 定义，描述具体的系统调用，剩下的 &lt;code&gt;3&lt;/code&gt; 个是系统调用所需的参数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Syscall6&lt;/code&gt; 总共接收 &lt;code&gt;7&lt;/code&gt; 个参数，第一个是 &lt;code&gt;trap&lt;/code&gt; 定义，描述具体的系统调用，剩下的 &lt;code&gt;6&lt;/code&gt; 个是系统调用所需的参数。&lt;/p&gt;
&lt;p&gt;如果使用 &lt;code&gt;Syscall&lt;/code&gt; 或 &lt;code&gt;Syscall6&lt;/code&gt; 时，系统调用所需的参数不满足函数形参所需的数量，则剩下的参数&lt;code&gt;传0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如，在 &lt;code&gt;POSIX&lt;/code&gt; 系统上打开一个命名信号量的系统调用是:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python源码笔记——Python中的列表对象</title>
      <link>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E5%88%97%E8%A1%A8%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 07 Apr 2023 14:00:50 +0800</pubDate>
      <guid>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E5%88%97%E8%A1%A8%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;h2 id=&#34;1列表结构体&#34;&gt;1.列表结构体&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define PyObject_VAR_HEAD      PyVarObject ob_base;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyObject ob_base;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_ssize_t ob_size; &lt;span style=&#34;color:#75715e&#34;&gt;/* Number of items in variable part */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyVarObject;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyObject_VAR_HEAD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* Vector of pointers to list elements.  list[0] is ob_item[0], etc. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyObject &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;ob_item;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/* ob_item contains space for &amp;#39;allocated&amp;#39; elements.  The number
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * currently in use is ob_size.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * Invariants:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *     0 &amp;lt;= ob_size &amp;lt;= allocated
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *     len(list) == ob_size
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *     ob_item == NULL implies ob_size == allocated == 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * list.sort() temporarily sets allocated to -1 to detect mutations.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * Items must normally not be NULL, except during construction when
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * the list is not yet visible outside the function that builds it.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_ssize_t allocated;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyListObject;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Python源码笔记——Python中的字符串对象</title>
      <link>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 07 Apr 2023 13:53:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;h2 id=&#34;1字符串对象&#34;&gt;1.字符串对象&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;Python3.11.2&lt;/code&gt;中，字符串类型&lt;code&gt;PyUnicodeObject&lt;/code&gt;的实现相当的复杂&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyObject_HEAD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_ssize_t length;          &lt;span style=&#34;color:#75715e&#34;&gt;/* Number of code points in the string */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_hash_t hash;             &lt;span style=&#34;color:#75715e&#34;&gt;/* Hash value; -1 if not set */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } state;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;wchar_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;wstr;              &lt;span style=&#34;color:#75715e&#34;&gt;/* wchar_t representation (null-terminated) */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyASCIIObject;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyASCIIObject _base;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_ssize_t utf8_length;     &lt;span style=&#34;color:#75715e&#34;&gt;/* Number of bytes in utf8, excluding the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                                 * terminating \0. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;utf8;                 &lt;span style=&#34;color:#75715e&#34;&gt;/* UTF-8 representation (null-terminated) */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Py_ssize_t wstr_length;     &lt;span style=&#34;color:#75715e&#34;&gt;/* Number of code points in wstr, possible
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                                 * surrogates count as two code points. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyCompactUnicodeObject;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyCompactUnicodeObject _base;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;union&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;any;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Py_UCS1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;latin1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Py_UCS2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ucs2;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Py_UCS4 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ucs4;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } data;                     &lt;span style=&#34;color:#75715e&#34;&gt;/* Canonical, smallest-form Unicode buffer */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyUnicodeObject;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Python源码笔记——Python中的整数对象</title>
      <link>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E6%95%B4%E6%95%B0%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 07 Apr 2023 13:45:10 +0800</pubDate>
      <guid>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E4%B8%AD%E7%9A%84%E6%95%B4%E6%95%B0%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;h2 id=&#34;1整数对象&#34;&gt;1.整数对象&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;Python3.11.2&lt;/code&gt;中，整数结构体叫做&lt;code&gt;PyLongObject&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#if PYLONG_BITS_IN_DIGIT == 30
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;uint32_t&lt;/span&gt; digit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#elif PYLONG_BITS_IN_DIGIT == 15
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;short&lt;/span&gt; digit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#else
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#error &amp;#34;PYLONG_BITS_IN_DIGIT should be 15 or 30&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#endif
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; _longobject {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;/* PyObject ob_base;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    Py_ssize_t ob_size; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyObject_VAR_HEAD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    digit ob_digit[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyLongObject;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Python源码笔记——Python对象机制的基石【PyObject】</title>
      <link>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E5%AF%B9%E8%B1%A1%E6%9C%BA%E5%88%B6%E7%9A%84%E5%9F%BA%E7%9F%B3pyobject/</link>
      <pubDate>Fri, 07 Apr 2023 13:43:34 +0800</pubDate>
      <guid>http://localhost:1313/posts/python%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0python%E5%AF%B9%E8%B1%A1%E6%9C%BA%E5%88%B6%E7%9A%84%E5%9F%BA%E7%9F%B3pyobject/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;所有源码均基于&lt;code&gt;Python 3.11.2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1pyobject定义&#34;&gt;1.PyObject定义&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 实际上没有任何东西被声明为PyObject，但是每个指向Python对象的指针都可以转换为PyObject*。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 这是手动模拟的继承。同样的，每个指向可变大小的Python对象的指针也可以转换为PyObject*，此外，也可以转换为PyVarObject*。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; _object {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		_PyObject_HEAD_EXTRA  &lt;span style=&#34;color:#75715e&#34;&gt;// 定义指针以支持所有活动堆对象的双向链表refchain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		Py_ssize_t ob_refcnt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PyTypeObject &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ob_type;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} PyObject;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;通过&lt;code&gt;ob_refcnt&lt;/code&gt;字段实现基于引用计数的垃圾回收机制。对于某一个&lt;code&gt;对象A&lt;/code&gt;，当有一个新的&lt;code&gt;PyObject*&lt;/code&gt;引用&lt;code&gt;A对象&lt;/code&gt;时，&lt;code&gt;A&lt;/code&gt;的引用计数会增加&lt;code&gt;1&lt;/code&gt;，当这个&lt;code&gt;PyObject*&lt;/code&gt;引用被删除时，&lt;code&gt;A&lt;/code&gt;的引用计数应当减&lt;code&gt;1&lt;/code&gt;，当此字段为&lt;code&gt;0&lt;/code&gt;时，进行垃圾回收（不一定会释放内存空间，&lt;code&gt;Python&lt;/code&gt;中还有缓存机制）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_PyObject_HEAD_EXTRA&lt;/code&gt;是一个宏，当编译&lt;code&gt;Python&lt;/code&gt;时指定参数&lt;code&gt;--with-trace-refs&lt;/code&gt;，那么&lt;code&gt;Py_TRACE_REFS&lt;/code&gt; 会被定义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ifdef Py_TRACE_REFS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Define pointers to support a doubly-linked list of all live heap objects. */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define _PyObject_HEAD_EXTRA            \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    PyObject *_ob_next;           \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    PyObject *_ob_prev;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define _PyObject_EXTRA_INIT _Py_NULL, _Py_NULL,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#else
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  define _PyObject_HEAD_EXTRA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  define _PyObject_EXTRA_INIT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#endif
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Mosh连接服务器时终端颜色显示问题</title>
      <link>http://localhost:1313/posts/mosh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%B6%E7%BB%88%E7%AB%AF%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 01 Jun 2019 10:09:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/mosh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%B6%E7%BB%88%E7%AB%AF%E9%A2%9C%E8%89%B2%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;在使用&lt;code&gt;mosh&lt;/code&gt;连接到服务器&lt;code&gt;Ubuntu 20.04&lt;/code&gt;时，发现终端(&lt;code&gt;终端是Kitty，支持256color&lt;/code&gt;)的颜色不能正常显示。&lt;/p&gt;
&lt;p&gt;使用命令查看了一下&lt;code&gt;$TERM&lt;/code&gt;的设置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo $TERM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xterm-256color
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显示的是&lt;code&gt;xterm-256color&lt;/code&gt;，说明配置的是没问题的。&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;mosh&lt;/code&gt;的版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mosh --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.3.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到&lt;code&gt;mosh&lt;/code&gt;的版本是&lt;code&gt;1.3.2&lt;/code&gt;，这个版本的&lt;code&gt;发布日期是2017-07-22&lt;/code&gt;，但是&lt;code&gt;github&lt;/code&gt;上&lt;code&gt;master&lt;/code&gt;分支一直在开发中。&lt;/p&gt;
&lt;p&gt;想着时间已经过去这么久了，官方应该已经解决了这个问题，毕竟现在的很多终端都是支持&lt;code&gt;256color&lt;/code&gt;的，所以就在&lt;code&gt;issue&lt;/code&gt;中搜索了一下，真的找到了一个解决方案。&lt;/p&gt;
&lt;h3 id=&#34;定位问题&#34;&gt;定位问题&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;2017年11月23号&lt;/code&gt;就有人提过关于&lt;code&gt;mosh的256color&lt;/code&gt;显示支持问题，而官方也已经解决了这个问题，但是不知道为什么都已经过去这么久了还没有发布新的版本。&lt;/p&gt;
&lt;p&gt;具体的&lt;a href=&#34;https://github.com/mobile-shell/mosh/issues/945#issuecomment-346627355&#34;&gt;issue&lt;/a&gt;。不过评论中说的&lt;code&gt;PPA&lt;/code&gt;也已经很久没有更新了。所以我们需要新的方案解决&lt;code&gt;Linux&lt;/code&gt;系统的问题。&lt;/p&gt;
&lt;h3 id=&#34;解决方案&#34;&gt;解决方案&lt;/h3&gt;
&lt;p&gt;想要让&lt;code&gt;mosh&lt;/code&gt;能正确的显示&lt;code&gt;256color&lt;/code&gt;，就只能&lt;code&gt;手动编译mosh的master分支&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;可以查看官方的安装&lt;a href=&#34;https://mosh.org/#getting&#34;&gt;教程&lt;/a&gt;，包含手动编译的教程。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;记得先将之前的安装卸载掉。&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;MacOS&lt;/code&gt;平台上，可以使用&lt;code&gt;brew&lt;/code&gt;来进行自动的编译和安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew uninstall mosh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install --HEAD mosh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>关于Go Modules的一些内容</title>
      <link>http://localhost:1313/posts/%E5%85%B3%E4%BA%8Ego-modules%E7%9A%84%E4%B8%80%E4%BA%9B%E5%86%85%E5%AE%B9/</link>
      <pubDate>Sat, 01 Jun 2019 10:08:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E5%85%B3%E4%BA%8Ego-modules%E7%9A%84%E4%B8%80%E4%BA%9B%E5%86%85%E5%AE%B9/</guid>
      <description>&lt;h2 id=&#34;启用go-modules&#34;&gt;启用Go Modules&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;go mod&lt;/code&gt;在&lt;code&gt;Go &amp;gt;= 1.13&lt;/code&gt;才默认启用，在&lt;code&gt;Go &amp;gt;= 1.11&lt;/code&gt;已经开始支持了&lt;code&gt;go mod&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;设置环境变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 启用go module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GO111MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置GOPATH，开启go mod之后，这个目录主要用来存放依赖包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GOPATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~/go_modules
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置go代理，在运行go test/build等时会自动下载依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用go get下载依赖需要在GOPATH中执行才会使用代理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GOPROXY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://goproxy.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;go-mod使用&#34;&gt;go mod使用&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;$GOPATH/src&lt;/code&gt;之外的任意目录创建一个目录，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p /home/gopher/project
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /home/gopher/project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Jenkins处理GitLab Hook</title>
      <link>http://localhost:1313/posts/jenkins%E5%A4%84%E7%90%86gitlab-hook/</link>
      <pubDate>Sat, 01 Jun 2019 10:07:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins%E5%A4%84%E7%90%86gitlab-hook/</guid>
      <description>&lt;p&gt;&lt;code&gt;jenkins&lt;/code&gt;安装&lt;code&gt;Generic Webhook Trigger Plugin&lt;/code&gt;插件&lt;/p&gt;
&lt;p&gt;{% asset_img Generic_Webhook_Trgger.png Generic\ Webhook\ Trgger具体配置 %}&lt;/p&gt;
&lt;p&gt;创建任务，在&lt;code&gt;构建触发器中&lt;/code&gt;勾选&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;, 在展开的页面中会有一个&lt;code&gt;URL&lt;/code&gt;, 这个&lt;code&gt;URL&lt;/code&gt;是配置&lt;code&gt;Webhook&lt;/code&gt;使用的，一般形式是&lt;code&gt;http://JENKINS_URL/generic-webhook-trigger/invoke&lt;/code&gt;, &lt;code&gt;JENKINS_URL&lt;/code&gt;是初始配置&lt;code&gt;jenkins&lt;/code&gt;时会有的，一般是&lt;code&gt;http://IP:8080&lt;/code&gt;的形式。&lt;/p&gt;
&lt;p&gt;如果之前有配置过&lt;code&gt;GitLab webhook&lt;/code&gt;, 请去除这个，不然&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;不会生效。&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;Git&lt;/code&gt;仓库的验证使用的是用户名和密码，那么就不需要配置&lt;code&gt;Token&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;复制这个&lt;code&gt;URL&lt;/code&gt;，将&lt;code&gt;JENKINS_URL&lt;/code&gt;替换为自己的真实数据，在&lt;code&gt;GitLab&lt;/code&gt;的对应的项目的&lt;code&gt;设置--&amp;gt;集成&lt;/code&gt;中输入，没有安全令牌，勾选自己需要的触发器事件，SSL证书验证可以开启，也可以不开启，推荐开启。&lt;/p&gt;
&lt;p&gt;任务设置界面还有&lt;code&gt;Post content parameters&lt;/code&gt;, &lt;code&gt;Header parameters&lt;/code&gt;, &lt;code&gt;Request parameters&lt;/code&gt;, 分别是请求的&lt;code&gt;post数据&lt;/code&gt;，&lt;code&gt;header头&lt;/code&gt;，&lt;code&gt;请求头&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一般我们只需要&lt;code&gt;post&lt;/code&gt;的数据里的内容就够了。&lt;/p&gt;
&lt;p&gt;图片的3，4分别是&lt;code&gt;变量名（3）&lt;/code&gt;，&lt;code&gt;值（4）&lt;/code&gt;。值是直接从&lt;code&gt;post&lt;/code&gt;的&lt;code&gt;json格式&lt;/code&gt;的数据中取出来的，注意，值的获取方式是&lt;code&gt;JSONPath&lt;/code&gt;，并且里面有&lt;code&gt;点&lt;/code&gt;，如果&lt;code&gt;json&lt;/code&gt;数据有多层，那么就多点几次，比如&lt;code&gt;$.project.name&lt;/code&gt;等，可以配置多个变量组。&lt;/p&gt;
&lt;p&gt;我们还可以&lt;code&gt;Generic Webhook Trigger&lt;/code&gt;配置&lt;code&gt;Optional filter&lt;/code&gt;，设置一个触发事件，比如只有当你推送的分支是&lt;code&gt;develop&lt;/code&gt;的时候，才去构建。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Optional filter&lt;/code&gt;的&lt;code&gt;Expression&lt;/code&gt;框中输入&lt;code&gt;^(refs/heads/develop)$&lt;/code&gt;, 在下面的&lt;code&gt;Text&lt;/code&gt;框中输入&lt;code&gt;步骤3的变量名&lt;/code&gt;，这里写&lt;code&gt;$ref&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;shell&lt;/code&gt;中使用变量名的方式也是直接使用，例如&lt;code&gt;echo $ref&lt;/code&gt;， 注意没有&lt;code&gt;点&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配置完成后，保存，可以点击刚刚配置的&lt;code&gt;GitLab&lt;/code&gt;的&lt;code&gt;webhook&lt;/code&gt;页面的&lt;code&gt;Test&lt;/code&gt;对应的事件测试。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GitLab&lt;/code&gt;的&lt;code&gt;push&lt;/code&gt;的&lt;code&gt;hook&lt;/code&gt;数据：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{
  &amp;#34;object_kind&amp;#34;: &amp;#34;push&amp;#34;,
  &amp;#34;before&amp;#34;: &amp;#34;95790bf891e76fee5e1747ab589903a6a1f80f22&amp;#34;,
  &amp;#34;after&amp;#34;: &amp;#34;da1560886d4f094c3e6c9ef40349f7d38b5d27d7&amp;#34;,
  &amp;#34;ref&amp;#34;: &amp;#34;refs/heads/master&amp;#34;,
  &amp;#34;checkout_sha&amp;#34;: &amp;#34;da1560886d4f094c3e6c9ef40349f7d38b5d27d7&amp;#34;,
  &amp;#34;user_id&amp;#34;: 4,
  &amp;#34;user_name&amp;#34;: &amp;#34;John Smith&amp;#34;,
  &amp;#34;user_username&amp;#34;: &amp;#34;jsmith&amp;#34;,
  &amp;#34;user_email&amp;#34;: &amp;#34;john@example.com&amp;#34;,
  &amp;#34;user_avatar&amp;#34;: &amp;#34;https://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=8://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=80&amp;#34;,
  &amp;#34;project_id&amp;#34;: 15,
  &amp;#34;project&amp;#34;:{
    &amp;#34;id&amp;#34;: 15,
    &amp;#34;name&amp;#34;:&amp;#34;Diaspora&amp;#34;,
    &amp;#34;description&amp;#34;:&amp;#34;&amp;#34;,
    &amp;#34;web_url&amp;#34;:&amp;#34;http://example.com/mike/diaspora&amp;#34;,
    &amp;#34;avatar_url&amp;#34;:null,
    &amp;#34;git_ssh_url&amp;#34;:&amp;#34;git@example.com:mike/diaspora.git&amp;#34;,
    &amp;#34;git_http_url&amp;#34;:&amp;#34;http://example.com/mike/diaspora.git&amp;#34;,
    &amp;#34;namespace&amp;#34;:&amp;#34;Mike&amp;#34;,
    &amp;#34;visibility_level&amp;#34;:0,
    &amp;#34;path_with_namespace&amp;#34;:&amp;#34;mike/diaspora&amp;#34;,
    &amp;#34;default_branch&amp;#34;:&amp;#34;master&amp;#34;,
    &amp;#34;homepage&amp;#34;:&amp;#34;http://example.com/mike/diaspora&amp;#34;,
    &amp;#34;url&amp;#34;:&amp;#34;git@example.com:mike/diaspora.git&amp;#34;,
    &amp;#34;ssh_url&amp;#34;:&amp;#34;git@example.com:mike/diaspora.git&amp;#34;,
    &amp;#34;http_url&amp;#34;:&amp;#34;http://example.com/mike/diaspora.git&amp;#34;
  },
  &amp;#34;repository&amp;#34;:{
    &amp;#34;name&amp;#34;: &amp;#34;Diaspora&amp;#34;,
    &amp;#34;url&amp;#34;: &amp;#34;git@example.com:mike/diaspora.git&amp;#34;,
    &amp;#34;description&amp;#34;: &amp;#34;&amp;#34;,
    &amp;#34;homepage&amp;#34;: &amp;#34;http://example.com/mike/diaspora&amp;#34;,
    &amp;#34;git_http_url&amp;#34;:&amp;#34;http://example.com/mike/diaspora.git&amp;#34;,
    &amp;#34;git_ssh_url&amp;#34;:&amp;#34;git@example.com:mike/diaspora.git&amp;#34;,
    &amp;#34;visibility_level&amp;#34;:0
  },
  &amp;#34;commits&amp;#34;: [
    {
      &amp;#34;id&amp;#34;: &amp;#34;b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327&amp;#34;,
      &amp;#34;message&amp;#34;: &amp;#34;Update Catalan translation to e38cb41.&amp;#34;,
      &amp;#34;timestamp&amp;#34;: &amp;#34;2011-12-12T14:27:31+02:00&amp;#34;,
      &amp;#34;url&amp;#34;: &amp;#34;http://example.com/mike/diaspora/commit/b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327&amp;#34;,
      &amp;#34;author&amp;#34;: {
        &amp;#34;name&amp;#34;: &amp;#34;Jordi Mallach&amp;#34;,
        &amp;#34;email&amp;#34;: &amp;#34;jordi@softcatala.org&amp;#34;
      },
      &amp;#34;added&amp;#34;: [&amp;#34;CHANGELOG&amp;#34;],
      &amp;#34;modified&amp;#34;: [&amp;#34;app/controller/application.rb&amp;#34;],
      &amp;#34;removed&amp;#34;: []
    },
    {
      &amp;#34;id&amp;#34;: &amp;#34;da1560886d4f094c3e6c9ef40349f7d38b5d27d7&amp;#34;,
      &amp;#34;message&amp;#34;: &amp;#34;fixed readme&amp;#34;,
      &amp;#34;timestamp&amp;#34;: &amp;#34;2012-01-03T23:36:29+02:00&amp;#34;,
      &amp;#34;url&amp;#34;: &amp;#34;http://example.com/mike/diaspora/commit/da1560886d4f094c3e6c9ef40349f7d38b5d27d7&amp;#34;,
      &amp;#34;author&amp;#34;: {
        &amp;#34;name&amp;#34;: &amp;#34;GitLab dev user&amp;#34;,
        &amp;#34;email&amp;#34;: &amp;#34;gitlabdev@dv6700.(none)&amp;#34;
      },
      &amp;#34;added&amp;#34;: [&amp;#34;CHANGELOG&amp;#34;],
      &amp;#34;modified&amp;#34;: [&amp;#34;app/controller/application.rb&amp;#34;],
      &amp;#34;removed&amp;#34;: []
    }
  ],
  &amp;#34;total_commits_count&amp;#34;: 4
}
&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Jenkins与RocketChat集成</title>
      <link>http://localhost:1313/posts/jenkins%E4%B8%8Erocketchat%E9%9B%86%E6%88%90/</link>
      <pubDate>Sat, 01 Jun 2019 10:06:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins%E4%B8%8Erocketchat%E9%9B%86%E6%88%90/</guid>
      <description>&lt;h2 id=&#34;jenkins与rocketchat集成&#34;&gt;Jenkins与RocketChat集成&lt;/h2&gt;
&lt;h3 id=&#34;在jenkins中安装插件rocketchat-notifier&#34;&gt;在Jenkins中安装插件RocketChat Notifier&lt;/h3&gt;
&lt;h3 id=&#34;配置信息&#34;&gt;配置信息&lt;/h3&gt;
&lt;p&gt;点击&lt;code&gt;Jenkins&lt;/code&gt;左侧的&lt;code&gt;系统管理--&amp;gt;系统设置&lt;/code&gt;, 找到&lt;code&gt;Global RocketChat Notifier Settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;Rocket Server URL&lt;/code&gt;, 是&lt;code&gt;URL:PORT&lt;/code&gt;的类型, 例: &lt;code&gt;http://chat.xxxx.com:80&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;配置&lt;code&gt;Login Username&lt;/code&gt;和&lt;code&gt;Login password&lt;/code&gt;, 是&lt;code&gt;RocketChat&lt;/code&gt;的账号密码.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Channel&lt;/code&gt;, 发送的频道.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Build Server URL&lt;/code&gt;, 构建的服务器和端口, &lt;code&gt;http://192.168.0.1:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;Test Connection&lt;/code&gt;, &lt;code&gt;Success&lt;/code&gt;表示配置成功.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins&#43;Python&#43;GitLab持续集成</title>
      <link>http://localhost:1313/posts/jenkins&#43;python&#43;gitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
      <pubDate>Sat, 01 Jun 2019 10:05:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins&#43;python&#43;gitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid>
      <description>&lt;h2 id=&#34;创建任务&#34;&gt;创建任务&lt;/h2&gt;
&lt;p&gt;登录&lt;code&gt;Jenkins&lt;/code&gt;，点击左侧列表的&lt;code&gt;新建&lt;/code&gt;选项。输入任务名称，选择&lt;code&gt;构建一个自由风格的软件项目&lt;/code&gt;，点击&lt;code&gt;确定&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;任务配置&lt;/code&gt;界面，可以设置&lt;code&gt;General标签&lt;/code&gt;中的&lt;code&gt;丢弃旧的构建&lt;/code&gt;选项，设置&lt;code&gt;保持构建的天数&lt;/code&gt;和&lt;code&gt;保持构建的最大个数&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;源码管理&lt;/code&gt;标签，选择&lt;code&gt;git&lt;/code&gt;，在&lt;code&gt;Repository URL&lt;/code&gt;中输入Git仓库的链接。&lt;/p&gt;
&lt;p&gt;如果是HTTP链接，选择&lt;code&gt;Credentials&lt;/code&gt;一行的&lt;code&gt;Add &amp;gt; Jenkins&lt;/code&gt;,在&lt;code&gt;Kind&lt;/code&gt;一行下拉选择&lt;code&gt;Username with password&lt;/code&gt;,在下方&lt;code&gt;Username&lt;/code&gt;和&lt;code&gt;Password&lt;/code&gt;框中输入用户名和密码。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;使用docker jenkins容器里面的ssh-key。&lt;/del&gt;
直接使用服务器的&lt;code&gt;ssh key&lt;/code&gt;就可以了。如果指定&lt;code&gt;Path to key&lt;/code&gt;需要使用&lt;code&gt;docker&lt;/code&gt;中的&lt;code&gt;ssh key&lt;/code&gt;。如果使用&lt;code&gt;Source files&lt;/code&gt;那么需要使用&lt;code&gt;docker&lt;/code&gt;容器中的&lt;code&gt;key&lt;/code&gt;, 因为&lt;code&gt;Source files&lt;/code&gt;的相对路径不是固化到本地的路径, 而是&lt;code&gt;docker&lt;/code&gt;中的路径.&lt;/p&gt;
&lt;p&gt;如果是&lt;code&gt;SSH&lt;/code&gt;链接，选择&lt;code&gt;SSH Username with private key&lt;/code&gt;,在&lt;code&gt;Username&lt;/code&gt;框中输入用户名，&lt;code&gt;Private Key	&lt;/code&gt;选择为&lt;code&gt;Enter directly&lt;/code&gt;,在显示的&lt;code&gt;key&lt;/code&gt;框中输入私钥。（生成秘钥&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;email.com&amp;quot;&lt;/code&gt;,生成的文件在&lt;code&gt;home&lt;/code&gt;目录下的&lt;code&gt;.ssh&lt;/code&gt;目录下,使用命令&lt;code&gt;cat id_rsa&lt;/code&gt;查看私钥，复制到&lt;code&gt;key&lt;/code&gt;框中）。点击最下方的&lt;code&gt;Add&lt;/code&gt;按钮，保存设置。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Credentials&lt;/code&gt;的下拉选项中选择刚刚创建&lt;code&gt;Username&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用定时任务&#34;&gt;使用定时任务&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;构建触发器&lt;/code&gt;标签里选择&lt;code&gt;Poll SCM&lt;/code&gt;,输入&lt;code&gt;H/2 * * * *&lt;/code&gt;, 最后点击&lt;code&gt;保存&lt;/code&gt;。
这是一个定时任务，每隔2分钟查询一次代码，如果有更新，就执行任务。&lt;/p&gt;
&lt;h2 id=&#34;使用webhook&#34;&gt;使用webhook&lt;/h2&gt;
&lt;p&gt;使用webhook比定时任务更好，webhook只有在push或指定操作时，jenkins会拉取代码，不用定时访问，耗费资源。&lt;/p&gt;
&lt;p&gt;需要安装的插件&lt;code&gt;Gitlab Hook、GitLab、Gitlab Authentication、Build Authorization Token Root&lt;/code&gt;
配置&lt;code&gt;job&lt;/code&gt;，在&lt;code&gt;构建触发器&lt;/code&gt;中勾选&lt;code&gt;Build when a change is pushed to GitLab. GitLab CI Service URL: http://服务器IP:8080/project/demo&lt;/code&gt; ，&lt;code&gt;URL&lt;/code&gt;后面是回调地址，再点击&lt;code&gt;高级&lt;/code&gt;，再&lt;code&gt;Secret token&lt;/code&gt;行，点击&lt;code&gt;Generate&lt;/code&gt;生成&lt;code&gt;token&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins&#43;Git子模块自动拉取代码</title>
      <link>http://localhost:1313/posts/jenkins&#43;git%E5%AD%90%E6%A8%A1%E5%9D%97%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 01 Jun 2019 10:04:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins&#43;git%E5%AD%90%E6%A8%A1%E5%9D%97%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;h2 id=&#34;jenkinsgit子模块自动拉取代码&#34;&gt;jenkins+Git子模块自动拉取代码&lt;/h2&gt;
&lt;p&gt;添加Git子模块
先克隆想要添加子模块的仓库&lt;code&gt;git clone ssh://git@ip:port/user/project.git&lt;/code&gt;，这个是主目录。&lt;/p&gt;
&lt;p&gt;进入仓库，添加子模块&lt;code&gt;git submodule add ssh://git@ip:port/user/project.git&lt;/code&gt;，和主仓库不同。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt;查看，会有&lt;code&gt;.gitmodules&lt;/code&gt;和子模块的项目名。&lt;/p&gt;
&lt;p&gt;将生成的文件和目录push到主仓库中。&lt;/p&gt;
&lt;h2 id=&#34;克隆有子模块的仓库&#34;&gt;克隆有子模块的仓库&lt;/h2&gt;
&lt;p&gt;添加过子模块的仓库，如果想重新克隆，和普通克隆一样，不过克隆后需要在仓库目录下执行
&lt;code&gt;git submodule init&lt;/code&gt;和&lt;code&gt;git submodule update&lt;/code&gt;，如果不执行，子模块中会没有文件。&lt;/p&gt;
&lt;h2 id=&#34;更改子模块的分支&#34;&gt;更改子模块的分支&lt;/h2&gt;
&lt;p&gt;切换到子模块目录，默认子模块是master分支，&lt;code&gt;git submodule foreach git checkout dev&lt;/code&gt;，
然后使用&lt;code&gt;git submodule foreach git pull&lt;/code&gt;切换分支。&lt;/p&gt;
&lt;p&gt;需要在&lt;code&gt;jenkins&lt;/code&gt;任务的&lt;code&gt;构建步骤&lt;/code&gt;中添加&lt;code&gt;git submodule init&lt;/code&gt;和&lt;code&gt;git submodule update&lt;/code&gt;，以及上述操作（写在这两个命令后面），
&lt;code&gt;jenkins&lt;/code&gt;才能拉取到代码。&lt;/p&gt;
&lt;h2 id=&#34;submodule可以进行tag和merge&#34;&gt;submodule可以进行tag和merge&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git submodule foreach&lt;/code&gt;可以分别对子模块进行操作, 所以对所有子模块进行&lt;code&gt;tag&lt;/code&gt;和&lt;code&gt;merge&lt;/code&gt;操作, 就相当于对总项目进行相应的操作.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins Email Extension插件模板</title>
      <link>http://localhost:1313/posts/jenkins-email-extension%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Sat, 01 Jun 2019 10:03:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/jenkins-email-extension%E6%8F%92%E4%BB%B6%E6%A8%A1%E6%9D%BF/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;
    &amp;lt;title&amp;gt;${ENV, var=&amp;#34;JOB_NAME&amp;#34;}-第${BUILD_NUMBER}次构建日志&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body leftmargin=&amp;#34;8&amp;#34; marginwidth=&amp;#34;0&amp;#34; topmargin=&amp;#34;8&amp;#34; marginheight=&amp;#34;4&amp;#34; offset=&amp;#34;0&amp;#34;&amp;gt;
    &amp;lt;table width=&amp;#34;95%&amp;#34; cellpadding=&amp;#34;0&amp;#34; cellspacing=&amp;#34;0&amp;#34; style=&amp;#34;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&amp;#34;&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;(本邮件由程序自动下发，请勿回复！)&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;h2&amp;gt;&amp;lt;font color=&amp;#34;#FF0000&amp;#34;&amp;gt;构建结果 - ${BUILD_STATUS}&amp;lt;/font&amp;gt;&amp;lt;/h2&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;br /&amp;gt;
                &amp;lt;b&amp;gt;&amp;lt;font color=&amp;#34;#0B610B&amp;#34;&amp;gt;构建信息&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;
                &amp;lt;hr size=&amp;#34;2&amp;#34; width=&amp;#34;100%&amp;#34; align=&amp;#34;center&amp;#34; /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt; SVN_URL
            &amp;lt;td&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;项目名称：${PROJECT_NAME}&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;GIT路径：${GIT_URL}&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;构建编号：${BUILD_NUMBER}&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;GIT分支：${GIT_BRANCH}&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;触发原因：${CAUSE}&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;构建日志：&amp;lt;a href=&amp;#34;${BUILD_URL}console&amp;#34;&amp;gt;${BUILD_URL}console&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;b&amp;gt;&amp;lt;font color=&amp;#34;#0B610B&amp;#34;&amp;gt;变更信息:&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;
                &amp;lt;hr size=&amp;#34;2&amp;#34; width=&amp;#34;100%&amp;#34; align=&amp;#34;center&amp;#34; /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;上次构建成功后变化 : ${CHANGES_SINCE_LAST_SUCCESS}&amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;上次构建不稳定后变化 : ${CHANGES_SINCE_LAST_UNSTABLE}&amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;历史变更记录 : &amp;lt;a href=&amp;#34;${PROJECT_URL}changes&amp;#34;&amp;gt;${PROJECT_URL}changes&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;变更集:${JELLY_SCRIPT,template=&amp;#34;html&amp;#34;}&amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;!--
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;b&amp;gt;&amp;lt;font color=&amp;#34;#0B610B&amp;#34;&amp;gt;Failed Test Results&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;
                &amp;lt;hr size=&amp;#34;2&amp;#34; width=&amp;#34;100%&amp;#34; align=&amp;#34;center&amp;#34; /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;pre style=&amp;#34;font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif&amp;#34;&amp;gt;$FAILED_TESTS&amp;lt;/pre&amp;gt;
                &amp;lt;br /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;

        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;b&amp;gt;&amp;lt;font color=&amp;#34;#0B610B&amp;#34;&amp;gt;构建日志 (最后 100行):&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;
                &amp;lt;hr size=&amp;#34;2&amp;#34; width=&amp;#34;100%&amp;#34; align=&amp;#34;center&amp;#34; /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;--&amp;gt;
        &amp;lt;!-- &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;Test Logs (if test has ran): &amp;lt;a
                href=&amp;#34;${PROJECT_URL}ws/TestResult/archive_logs/Log-Build-${BUILD_NUMBER}.zip&amp;#34;&amp;gt;${PROJECT_URL}/ws/TestResult/archive_logs/Log-Build-${BUILD_NUMBER}.zip&amp;lt;/a&amp;gt;
                &amp;lt;br /&amp;gt;
            &amp;lt;br /&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt; --&amp;gt;
        &amp;lt;!--
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;textarea cols=&amp;#34;80&amp;#34; rows=&amp;#34;30&amp;#34; readonly=&amp;#34;readonly&amp;#34; style=&amp;#34;font-family: Courier New&amp;#34;&amp;gt;${BUILD_LOG, maxLines=100,escapeHtml=true}&amp;lt;/textarea&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;--&amp;gt;
        &amp;lt;hr size=&amp;#34;2&amp;#34; width=&amp;#34;100%&amp;#34; align=&amp;#34;center&amp;#34; /&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Git使用</title>
      <link>http://localhost:1313/posts/git%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 01 Jun 2019 10:02:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/git%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h2 id=&#34;git换行符&#34;&gt;Git换行符&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Git&lt;/code&gt;会自动处理换行符的问题, 但是这个在实际开发中会出现问题, 所以, 在&lt;code&gt;Windows&lt;/code&gt;上使用&lt;code&gt;提交时转换为LF，检出时不转换&lt;/code&gt;功能, 统一使用Unix换行符(也可以在类Unix上启用这个功能, 将拉取的没有改变的换行符更换).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Windows&lt;/code&gt;打开安装好的&lt;code&gt;Git Bash&lt;/code&gt;, &lt;code&gt;类Unix&lt;/code&gt;直接输入:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git config --global core.autocrlf input
git config --global core.safecrlf warn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;含义：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AutoCRLF
# 提交时转换为LF，检出时转换为CRLF
git config --global core.autocrlf true

# 提交时转换为LF，检出时不转换
git config --global core.autocrlf input

# 提交检出均不转换
git config --global core.autocrlf false

SafeCRLF
# 拒绝提交包含混合换行符的文件
git config --global core.safecrlf true

# 允许提交包含混合换行符的文件
git config --global core.safecrlf false

# 提交包含混合换行符的文件时给出警告
git config --global core.safecrlf warn
&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Docker安装GitLab Runner</title>
      <link>http://localhost:1313/posts/docker%E5%AE%89%E8%A3%85gitlab-runner/</link>
      <pubDate>Sat, 01 Jun 2019 10:01:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/docker%E5%AE%89%E8%A3%85gitlab-runner/</guid>
      <description>&lt;p&gt;&lt;code&gt;docker pull gitlab/gitlab-runner:latest&lt;/code&gt;安装&lt;code&gt;gitlab-runner&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开自己搭建的&lt;code&gt;GitLab&lt;/code&gt;网站，点击顶栏的&lt;code&gt;Snippets&lt;/code&gt;后面的小扳手，再点击左侧列表中&lt;code&gt;Overview&lt;/code&gt;中的&lt;code&gt;Runners&lt;/code&gt;，在打开的网页下面，可以看到&lt;code&gt;How to setup a shared Runner for a new project&lt;/code&gt;行，&lt;code&gt;2是Runners设置时需要指定的URL,3是在设置是的Runners&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;运行镜像&#34;&gt;运行镜像&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker run -d --name gitlab-runner --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:latest&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;注册gitlab-runner&#34;&gt;注册&lt;code&gt;gitlab-runner&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker exec -it gitlab-runner gitlab-runner register&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):&lt;/code&gt;输入域名或者服务器&lt;code&gt;ip&lt;/code&gt;地址，格式为&lt;code&gt;https://gitlab.com&lt;/code&gt;。和&lt;code&gt;token&lt;/code&gt; &lt;code&gt;Please enter the gitlab-ci token for this runner:&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Please enter the gitlab-ci description for this runner:&lt;/code&gt;输入&lt;code&gt;runner&lt;/code&gt;描述。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Please enter the gitlab-ci tags for this runner (comma separated):&lt;/code&gt;给这个&lt;code&gt;Runner&lt;/code&gt;指定&lt;code&gt;tags&lt;/code&gt;，稍后也可以在&lt;code&gt;GitLab&#39;s UI&lt;/code&gt;中修改。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tag</title>
      <link>http://localhost:1313/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tags/</guid>
      <description>tags</description>
    </item>
  </channel>
</rss>
